
//
// @file
// Structural rules for pager.
//

// Load required `Framework SASS` modules.
@use '../../config/variable-overrides';
@use '../../../_sass-framework/elements/list';
@use '../../../_sass-framework/utilities/display';
@use '../../../_sass-framework/utilities/font/awesome';

// The following comment starts with a "!". So it will not be removed during
// the (SASS) compilation. It is just to alert project contributors that the
// (CSS) output file can not be modified under any circumstances.
/*! Compiled SASS file | Do NOT modify from here !*/

// This document follows Drupal CSS coding standards, Sass Guidelines
// and Sass Style Guide. Read more about these topics:
//
// @see https://www.drupal.org/docs/develop/standards/css/
// @see https://css-tricks.com/sass-style-guide/
// @see https://sass-guidelin.es
//
// This file is compiled separately so we can pull in config dependencies
// above while also maintaining Drupal's SMACSS structure.

// Markup generated by pager.html.twig.
//
.pager {
  --pager-item-not-first-child-margin-left: var(--margin-xsmall);
  --pager-link-width: fit-content;
  --pager-link-padding-top: var(--padding-vertical-large);
  --pager-link-padding-bottom: var(--padding-vertical-large);
  --pager-link-hover-background-color: transparent;
  --pager-link-active-background-color: transparent;
  --pager-link-active-font-weight: normal;
  --pager-link-steps-icon-margin-right: var(--margin-small);
  --pager-link-steps-icon-margin-left: var(--margin-small);

  // Pager (Unordered list)
  //
  &__items {
    @include display.flex(center baseline);
    @include list.unstyled;
  }

  // Pager (List items)
  //
  &__item {

    // Pager (List items / Excepted the first child)
    //
    &:not(:first-child) {
      margin-left: var(--pager-item-not-first-child-margin-left);
    }

    // Pager (List items / Ellipsis), (Item links)
    //
    &--ellipsis,
    > a {
      width: var(--pager-item-link-width);
      padding: {
        top: var(--pager-item-link-padding-top);
        bottom: var(--pager-item-link-padding-bottom);
      }
      line-height: 1.25;
      text-align: center;
    }

    // Pager (Item links)
    //
    > a {
      display: block;

      // Pager (Item links / Hover state)
      //
      &:hover {
        background-color: var(--pager-link-hover-background-color);
        text-decoration: none;
      }
    }

    // Pager (Item links / Active state)
    //
    &.is-active > a {
      background-color: var(--pager-link-active-background-color);
      font-weight: var(--pager-link-active-font-weight);
    }

    // Loop through all different list items (First, previous, next and last) steps.
    //
    @each $step, $icon in (
      'first': 'angle-double-left',
      'previous': 'angle-left',
      'next': 'angle-right',
      'last': 'angle-double-right',
    ) {

      // Set the correct selector.
      //
      $selector: if($step == 'first' or $step == 'previous', 'before', 'after');

      // Pager (List items / Steps)
      //
      &--#{$step} {

        // Pager (Item links / Steps)
        //
        > a {
          @extend %pager-steps-defaults;
          @include awesome.icon($icon, $position: $selector) {
            margin: {
              right: var(--pager-link-steps-icon-margin-right);
              left: var(--pager-link-steps-icon-margin-left);
            }
          }
        }
      }
    }
  }
}

// Common properties for "Pager" steps
//
%pager-steps-defaults {
  width: auto;

  // Hover state
  //
  &:hover {
    background-color: transparent;
    text-decoration: underline;
  }
}
