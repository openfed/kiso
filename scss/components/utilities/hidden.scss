
//
// @file
// Invisible content & Screenreaders
//
// Utility classes to hide elements in different ways.
//

// Load required `Framework SASS` modules.
@use '../../config/variable-overrides';
@use '../../../_sass-framework/helpers/a11y';

// The following comment starts with a "!". So it will not be removed during
// the (SASS) compilation. It is just to alert project contributors that the
// (CSS) output file can not be modified under any circumstances.
/*! Compiled SASS file | Do NOT modify from here !*/

// This document follows Drupal CSS coding standards, Sass Guidelines
// and Sass Style Guide. Read more about these topics:
//
// @see https://www.drupal.org/docs/develop/standards/css/
// @see https://css-tricks.com/sass-style-guide/
// @see https://sass-guidelin.es
//
// This file is compiled separately so we can pull in config dependencies
// above while also maintaining Drupal's SMACSS structure.

// Hide elements from all users.
//
// Used for elements which should not be immediately displayed to any user. An
// example would be a collapsible fieldset that will be expanded with a click
// from a user. The effect of this class can be toggled with the jQuery show()
// and hide() functions.
//
.hidden {
  display: none;
}
// For anything you want to hide on page load when JS is enabled, so
// that you can use the JS to control visibility and avoid flicker.
//
html.js .js-hide {
  @extend .hidden;
}

// Hide elements visually, but keep them available for screen-readers.
//
// Used for information required for screen-reader users to understand and use
// the site where visual display is undesirable. Information provided in this
// manner should be kept concise, to avoid unnecessary burden on the user.
// "!important" is used to prevent unintentional overrides.
//
.visually-hidden {
  @include a11y.visually-hidden;

  // The ".focusable" class extends the ".visually-hidden" class to allow
  // the element to be focusable when navigated to via the keyboard.
  //
  &.focusable {
    @include a11y.focusable;
  }
}

// Hide visually and from screen readers, but maintain layout.
//
.invisible {
  visibility: hidden;
}
